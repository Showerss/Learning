# # writing functions, 
    calling a function creates a local namespace for that function

# def keepUbering(income_list, target_income):
#     income = 0 
#     for p in income:
#     # p is the iterative
#         income += p
#     if income < target_income:
#         return True
#     else: return False
#     # this is an accumulator style of for loop

# -------------------------------

import random

def rollADie():
    return random.randint(1,6)

def testRollADie6(max_roll):
    count = 0
    result = 0
    for i in range(max_roll):
        result = rollADie()
        count += 1 #accumulator
        print('die rolled:', result)
        if result == 6:
            return count
    return count

num_rolls = testRollADie6(10)
print(num_rolls)


# draw reference diagrams
def increment(x):
    x = x+1

a=0

increment(a)
print(a)
# this means a = a+1

a = increment(a)
# a would equal 1
print(a)


---------
a       0
1       a=0+1
2       a=1+1
3       a=2+1
4       a=3+1
